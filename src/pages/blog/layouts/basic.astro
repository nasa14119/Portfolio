---
const { frontmatter } = Astro.props;
import "@assets/css/index.css";
import "../assets/default.css";
import Default from "src/layouts/Default.astro";
import Nav from "../components/Nav.astro";
import Hr from "../components/Hr.astro";
function getDate() {
  const today = new Date();
  const yyyy = today.getFullYear();
  let mm = today.getMonth() + 1; // Months start at 0!
  let dd = today.getDate();
  let formatDay = dd < 10 ? "0" + dd : dd;
  let formatMonth = mm < 10 ? "0" + mm : mm;
  return `${formatDay} / ${formatMonth} / ${yyyy}`;
}
---

<Default title={frontmatter.title}>
  <Nav />
  <div class="md:grid">
    <section class="md:max-w-lg rounded-3xl md:mx-auto">
      <header
        class="w-full h-60 rounded-b-3xl overflow-hidden relative text-white"
        id="top"
      >
        <div
          class="absolute inset-0 flex justify-center items-center bg-black/40"
        >
          <h1 class="bg-complementOne px-2 text-3xl bg-neutral-700">
            {frontmatter.title || "Title"}
          </h1>
        </div>
        <div class="absolute left-0 bottom-5 flex">
          <img
            src="https://picsum.photos/500"
            alt=""
            class="rounded-full w-1/12 ml-5"
          />
          <ul class="flex items-center gap-x-4 text-xs mx-5 list-['#']">
            {
              frontmatter.categories?.map((ele: string) => (
                <li class="pl-1">{ele} </li>
              ))
            }
          </ul>
        </div>
        <img
          src={frontmatter.heroImage ||
            "https://picsum.photos/500/250?random=3"}
          alt="computer"
          class="min-h-full object-cover min-w-full"
        />
      </header>
      <Hr color="transparent" />
      <main class="rounded-3xl p-5 bg-[#202020]">
        <h5 class="font-bold text-sm">
          {frontmatter.date || getDate()}
        </h5>
        <ul class="flex py-3 gap-x-4">
          <li>
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
              <path stroke-linecap="round" stroke-linejoin="round" d="M9 15 3 9m0 0 6-6M3 9h12a6 6 0 0 1 0 12h-3" />
            </svg>            
          </li>
          <li>
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
              <path stroke-linecap="round" stroke-linejoin="round" d="M21 8.25c0-2.485-2.099-4.5-4.688-4.5-1.935 0-3.597 1.126-4.312 2.733-.715-1.607-2.377-2.733-4.313-2.733C5.1 3.75 3 5.765 3 8.25c0 7.22 9 12 9 12s9-4.78 9-12Z" />
            </svg>                        
          </li>
          <li>
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-6 h-6">
              <path fill-rule="evenodd" d="M13.28 11.47a.75.75 0 0 1 0 1.06l-7.5 7.5a.75.75 0 0 1-1.06-1.06L11.69 12 4.72 5.03a.75.75 0 0 1 1.06-1.06l7.5 7.5Z" clip-rule="evenodd" />
              <path fill-rule="evenodd" d="M19.28 11.47a.75.75 0 0 1 0 1.06l-7.5 7.5a.75.75 0 1 1-1.06-1.06L17.69 12l-6.97-6.97a.75.75 0 0 1 1.06-1.06l7.5 7.5Z" clip-rule="evenodd" />
            </svg>            
          </li>
        </ul>
        <article>
          <slot />
        </article>
      </main>
    </section>
  </div>
</Default>
<style>
  @keyframes imageLoad {
    from {
      transform: translateY(-100%);
    }
    to {
      transform: translateY(0);
      opacity: 1;
    }
  }
  section header {
    opacity: 0;
    animation: imageLoad 1s forwards;
    animation-delay: 2s;
  }
</style>
<style is:global>
  article > h3 {
    @apply text-xl;
  }
  article > p {
    @apply py-5;
  }
  article blockquote {
    @apply mx-5 border-l-2 border-l-neutral-400 px-2 my-2;
  }
  .header-aside {
    grid-template-rows: 1fr 4rem;
  }
</style>
